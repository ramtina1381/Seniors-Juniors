{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUploadComplete,\n  location\n}) => {\n  _s();\n  const [photoFiles, setPhotoFiles] = useState([]);\n  const [manufacturerFile, setManufacturerFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState({\n    photos: 0,\n    manufacturer: 0\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const handlePhotoChange = e => {\n    setPhotoFiles(Array.from(e.target.files || []));\n  };\n  const handleManufacturerChange = e => {\n    var _e$target$files;\n    setManufacturerFile(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n  };\n  const handleUpload = async () => {\n    if (!photoFiles.length || !manufacturerFile) {\n      alert('Please upload both photos and manufacturer file');\n      return;\n    }\n    setIsUploading(true);\n    try {\n      // Upload photos\n      const photoFormData = new FormData();\n      photoFiles.forEach(file => {\n        photoFormData.append('photos', file);\n      });\n      await axios.post('http://localhost:5001/api/upload/photos', photoFormData, {\n        onUploadProgress: progress => {\n          setUploadProgress(prev => ({\n            ...prev,\n            photos: Math.round(progress.loaded * 100 / progress.total)\n          }));\n        }\n      });\n\n      // Upload manufacturer file\n      const manufacturerFormData = new FormData();\n      manufacturerFormData.append('file', manufacturerFile);\n      await axios.post('http://localhost:5001/api/upload/manufacturer', manufacturerFormData, {\n        onUploadProgress: progress => {\n          setUploadProgress(prev => ({\n            ...prev,\n            manufacturer: Math.round(progress.loaded * 100 / progress.total)\n          }));\n        }\n      });\n\n      // Combine all files and notify parent\n      onUploadComplete([...photoFiles, manufacturerFile]);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert(`Upload failed: ${error.message}`);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress({\n        photos: 0,\n        manufacturer: 0\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Equipment Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/*\",\n        onChange: handlePhotoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-count\",\n        children: [photoFiles.length, \" photo\", photoFiles.length !== 1 ? 's' : '', \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), uploadProgress.photos > 0 && /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress.photos,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Manufacturer File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx,.xls\",\n        onChange: handleManufacturerChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-name\",\n        children: manufacturerFile ? manufacturerFile.name : 'No file selected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), uploadProgress.manufacturer > 0 && /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress.manufacturer,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading || !photoFiles.length || !manufacturerFile,\n      children: isUploading ? 'Uploading...' : 'Upload Files'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"wo5jPqYb+zdeS8RY9ngZGio5lZA=\");\n_c = FileUpload;\nFileUpload.propTypes = {\n  onUploadComplete: PropTypes.func.isRequired,\n  location: PropTypes.string.isRequired\n};\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","PropTypes","jsxDEV","_jsxDEV","FileUpload","onUploadComplete","location","_s","photoFiles","setPhotoFiles","manufacturerFile","setManufacturerFile","uploadProgress","setUploadProgress","photos","manufacturer","isUploading","setIsUploading","handlePhotoChange","e","Array","from","target","files","handleManufacturerChange","_e$target$files","handleUpload","length","alert","photoFormData","FormData","forEach","file","append","post","onUploadProgress","progress","prev","Math","round","loaded","total","manufacturerFormData","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","accept","onChange","value","max","name","onClick","disabled","_c","propTypes","func","isRequired","string","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst FileUpload = ({ onUploadComplete, location }) => {\n  const [photoFiles, setPhotoFiles] = useState([]);\n  const [manufacturerFile, setManufacturerFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState({ \n    photos: 0, \n    manufacturer: 0 \n  });\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handlePhotoChange = (e) => {\n    setPhotoFiles(Array.from(e.target.files || []));\n  };\n\n  const handleManufacturerChange = (e) => {\n    setManufacturerFile(e.target.files?.[0] || null);\n  };\n\n  const handleUpload = async () => {\n    if (!photoFiles.length || !manufacturerFile) {\n      alert('Please upload both photos and manufacturer file');\n      return;\n    }\n\n    setIsUploading(true);\n\n    try {\n      // Upload photos\n      const photoFormData = new FormData();\n      photoFiles.forEach(file => {\n        photoFormData.append('photos', file);\n      });\n\n      await axios.post('http://localhost:5001/api/upload/photos', photoFormData, {\n        onUploadProgress: progress => {\n          setUploadProgress(prev => ({\n            ...prev,\n            photos: Math.round((progress.loaded * 100) / progress.total)\n          }));\n        }\n      });\n\n      // Upload manufacturer file\n      const manufacturerFormData = new FormData();\n      manufacturerFormData.append('file', manufacturerFile);\n\n      await axios.post('http://localhost:5001/api/upload/manufacturer', manufacturerFormData, {\n        onUploadProgress: progress => {\n          setUploadProgress(prev => ({\n            ...prev,\n            manufacturer: Math.round((progress.loaded * 100) / progress.total)\n          }));\n        }\n      });\n\n      // Combine all files and notify parent\n      onUploadComplete([...photoFiles, manufacturerFile]);\n      \n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert(`Upload failed: ${error.message}`);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress({ photos: 0, manufacturer: 0 });\n    }\n  };\n\n  return (\n    <div className=\"file-upload-container\">\n      <div className=\"upload-section\">\n        <h3>Upload Equipment Photos</h3>\n        <input\n          type=\"file\"\n          multiple\n          accept=\"image/*\"\n          onChange={handlePhotoChange}\n        />\n        <div className=\"file-count\">\n          {photoFiles.length} photo{photoFiles.length !== 1 ? 's' : ''} selected\n        </div>\n        {uploadProgress.photos > 0 && (\n          <progress value={uploadProgress.photos} max=\"100\" />\n        )}\n      </div>\n\n      <div className=\"upload-section\">\n        <h3>Upload Manufacturer File</h3>\n        <input\n          type=\"file\"\n          accept=\".xlsx,.xls\"\n          onChange={handleManufacturerChange}\n        />\n        <div className=\"file-name\">\n          {manufacturerFile ? manufacturerFile.name : 'No file selected'}\n        </div>\n        {uploadProgress.manufacturer > 0 && (\n          <progress value={uploadProgress.manufacturer} max=\"100\" />\n        )}\n      </div>\n\n      <button\n        onClick={handleUpload}\n        disabled={isUploading || !photoFiles.length || !manufacturerFile}\n      >\n        {isUploading ? 'Uploading...' : 'Upload Files'}\n      </button>\n    </div>\n  );\n};\n\nFileUpload.propTypes = {\n  onUploadComplete: PropTypes.func.isRequired,\n  location: PropTypes.string.isRequired\n};\n\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC;IACnDe,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMmB,iBAAiB,GAAIC,CAAC,IAAK;IAC/BV,aAAa,CAACW,KAAK,CAACC,IAAI,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,IAAI,EAAE,CAAC,CAAC;EACjD,CAAC;EAED,MAAMC,wBAAwB,GAAIL,CAAC,IAAK;IAAA,IAAAM,eAAA;IACtCd,mBAAmB,CAAC,EAAAc,eAAA,GAAAN,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAE,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,KAAI,IAAI,CAAC;EAClD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAClB,UAAU,CAACmB,MAAM,IAAI,CAACjB,gBAAgB,EAAE;MAC3CkB,KAAK,CAAC,iDAAiD,CAAC;MACxD;IACF;IAEAX,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACF;MACA,MAAMY,aAAa,GAAG,IAAIC,QAAQ,CAAC,CAAC;MACpCtB,UAAU,CAACuB,OAAO,CAACC,IAAI,IAAI;QACzBH,aAAa,CAACI,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;MACtC,CAAC,CAAC;MAEF,MAAMhC,KAAK,CAACkC,IAAI,CAAC,yCAAyC,EAAEL,aAAa,EAAE;QACzEM,gBAAgB,EAAEC,QAAQ,IAAI;UAC5BvB,iBAAiB,CAACwB,IAAI,KAAK;YACzB,GAAGA,IAAI;YACPvB,MAAM,EAAEwB,IAAI,CAACC,KAAK,CAAEH,QAAQ,CAACI,MAAM,GAAG,GAAG,GAAIJ,QAAQ,CAACK,KAAK;UAC7D,CAAC,CAAC,CAAC;QACL;MACF,CAAC,CAAC;;MAEF;MACA,MAAMC,oBAAoB,GAAG,IAAIZ,QAAQ,CAAC,CAAC;MAC3CY,oBAAoB,CAACT,MAAM,CAAC,MAAM,EAAEvB,gBAAgB,CAAC;MAErD,MAAMV,KAAK,CAACkC,IAAI,CAAC,+CAA+C,EAAEQ,oBAAoB,EAAE;QACtFP,gBAAgB,EAAEC,QAAQ,IAAI;UAC5BvB,iBAAiB,CAACwB,IAAI,KAAK;YACzB,GAAGA,IAAI;YACPtB,YAAY,EAAEuB,IAAI,CAACC,KAAK,CAAEH,QAAQ,CAACI,MAAM,GAAG,GAAG,GAAIJ,QAAQ,CAACK,KAAK;UACnE,CAAC,CAAC,CAAC;QACL;MACF,CAAC,CAAC;;MAEF;MACApC,gBAAgB,CAAC,CAAC,GAAGG,UAAU,EAAEE,gBAAgB,CAAC,CAAC;IAErD,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCf,KAAK,CAAC,kBAAkBe,KAAK,CAACE,OAAO,EAAE,CAAC;IAC1C,CAAC,SAAS;MACR5B,cAAc,CAAC,KAAK,CAAC;MACrBJ,iBAAiB,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAE,CAAC,CAAC;IACnD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK2C,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC5C,OAAA;MAAK2C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B5C,OAAA;QAAA4C,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChChD,OAAA;QACEiD,IAAI,EAAC,MAAM;QACXC,QAAQ;QACRC,MAAM,EAAC,SAAS;QAChBC,QAAQ,EAAErC;MAAkB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFhD,OAAA;QAAK2C,SAAS,EAAC,YAAY;QAAAC,QAAA,GACxBvC,UAAU,CAACmB,MAAM,EAAC,QAAM,EAACnB,UAAU,CAACmB,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,WAC/D;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLvC,cAAc,CAACE,MAAM,GAAG,CAAC,iBACxBX,OAAA;QAAUqD,KAAK,EAAE5C,cAAc,CAACE,MAAO;QAAC2C,GAAG,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACpD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENhD,OAAA;MAAK2C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B5C,OAAA;QAAA4C,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjChD,OAAA;QACEiD,IAAI,EAAC,MAAM;QACXE,MAAM,EAAC,YAAY;QACnBC,QAAQ,EAAE/B;MAAyB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFhD,OAAA;QAAK2C,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBrC,gBAAgB,GAAGA,gBAAgB,CAACgD,IAAI,GAAG;MAAkB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,EACLvC,cAAc,CAACG,YAAY,GAAG,CAAC,iBAC9BZ,OAAA;QAAUqD,KAAK,EAAE5C,cAAc,CAACG,YAAa;QAAC0C,GAAG,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC1D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENhD,OAAA;MACEwD,OAAO,EAAEjC,YAAa;MACtBkC,QAAQ,EAAE5C,WAAW,IAAI,CAACR,UAAU,CAACmB,MAAM,IAAI,CAACjB,gBAAiB;MAAAqC,QAAA,EAEhE/B,WAAW,GAAG,cAAc,GAAG;IAAc;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA3GIH,UAAU;AAAAyD,EAAA,GAAVzD,UAAU;AA6GhBA,UAAU,CAAC0D,SAAS,GAAG;EACrBzD,gBAAgB,EAAEJ,SAAS,CAAC8D,IAAI,CAACC,UAAU;EAC3C1D,QAAQ,EAAEL,SAAS,CAACgE,MAAM,CAACD;AAC7B,CAAC;AAED,eAAe5D,UAAU;AAAC,IAAAyD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}