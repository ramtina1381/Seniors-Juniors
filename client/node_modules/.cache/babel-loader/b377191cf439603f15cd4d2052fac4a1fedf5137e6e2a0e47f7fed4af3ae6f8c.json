{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/pages/JHA.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport JHAFileUpload from '../components/JHAFileUpload';\nimport ProcessButton from '../components/ProcessButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JHA = () => {\n  _s();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [location, setLocation] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processMessage, setProcessMessage] = useState('');\n  const handleUploadComplete = (files, uploadedLocation) => {\n    const allUploaded = [...(files.pdfs || []), ...(files.excel ? [files.excel] : [])];\n    setUploadedFiles([...uploadedFiles, ...allUploaded]);\n    setLocation(uploadedLocation);\n    alert('JHA PDF and Manufacturer Excel file uploaded successfully!');\n  };\n  const handleProcess = async () => {\n    if (!location) {\n      alert('Please enter a location before processing.');\n      return;\n    }\n    setIsProcessing(true);\n    setProcessMessage('');\n    try {\n      const response = await fetch(`http://localhost:5002/api/jhaprocess${location}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          location\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Server returned an error while processing.');\n      }\n      const data = await response.json();\n      setProcessMessage(data.message || 'Processing completed successfully!');\n    } catch (error) {\n      setProcessMessage(`Error: ${error.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jha-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JHA Document Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please upload the Job Hazard Analysis PDF files and the corresponding manufacturer Excel file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JHAFileUpload, {\n      onUploadComplete: handleUploadComplete,\n      location: location,\n      setLocation: setLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProcessButton, {\n      onClick: handleProcess,\n      disabled: !uploadedFiles.length || !location || isProcessing,\n      loading: isProcessing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), processMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"process-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: processMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(JHA, \"NttMqWnGW66whIAEP/MkYqwmoLo=\");\n_c = JHA;\nexport default JHA;\nvar _c;\n$RefreshReg$(_c, \"JHA\");","map":{"version":3,"names":["React","useState","JHAFileUpload","ProcessButton","jsxDEV","_jsxDEV","JHA","_s","uploadedFiles","setUploadedFiles","location","setLocation","isProcessing","setIsProcessing","processMessage","setProcessMessage","handleUploadComplete","files","uploadedLocation","allUploaded","pdfs","excel","alert","handleProcess","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadComplete","onClick","disabled","length","loading","map","file","index","name","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/pages/JHA.js"],"sourcesContent":["import React, { useState } from 'react';\nimport JHAFileUpload from '../components/JHAFileUpload';\nimport ProcessButton from '../components/ProcessButton';\n\nconst JHA = () => {\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [location, setLocation] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processMessage, setProcessMessage] = useState('');\n\n  const handleUploadComplete = (files, uploadedLocation) => {\n    const allUploaded = [\n      ...(files.pdfs || []),\n      ...(files.excel ? [files.excel] : [])\n    ];\n    setUploadedFiles([...uploadedFiles, ...allUploaded]);\n    setLocation(uploadedLocation);\n    alert('JHA PDF and Manufacturer Excel file uploaded successfully!');\n  };\n\n  const handleProcess = async () => {\n    if (!location) {\n      alert('Please enter a location before processing.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setProcessMessage('');\n\n    try {\n      const response = await fetch(`http://localhost:5002/api/jhaprocess${location}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ location }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Server returned an error while processing.');\n      }\n\n      const data = await response.json();\n      setProcessMessage(data.message || 'Processing completed successfully!');\n    } catch (error) {\n      setProcessMessage(`Error: ${error.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"jha-page-container\">\n      <h1>JHA Document Upload</h1>\n      <p>Please upload the Job Hazard Analysis PDF files and the corresponding manufacturer Excel file.</p>\n\n      <JHAFileUpload\n        onUploadComplete={handleUploadComplete}\n        location={location}\n        setLocation={setLocation}\n      />\n\n      <ProcessButton \n        onClick={handleProcess} \n        disabled={!uploadedFiles.length || !location || isProcessing}\n        loading={isProcessing}\n      />\n\n      {processMessage && (\n        <div className=\"process-message\">\n          <p>{processMessage}</p>\n        </div>\n      )}\n\n      {uploadedFiles.length > 0 && (\n        <div className=\"uploaded-summary\">\n          <h3>Uploaded Files:</h3>\n          <ul>\n            {uploadedFiles.map((file, index) => (\n              <li key={index}>{file.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default JHA;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}