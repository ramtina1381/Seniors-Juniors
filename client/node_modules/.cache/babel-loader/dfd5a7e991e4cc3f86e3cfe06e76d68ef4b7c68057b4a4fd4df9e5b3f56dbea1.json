{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport LocationInput from './components/LocationInput';\nimport ProcessButton from './components/ProcessButton';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]); // Always initialize as array\n  const [location, setLocation] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Modified to handle both array and single file cases\n  const handleUploadComplete = uploadedFiles => {\n    setFiles(prev => [...prev, ...(Array.isArray(uploadedFiles) ? uploadedFiles : [uploadedFiles])]);\n  };\n  const handleProcess = async () => {\n    setIsProcessing(true);\n    try {\n      // Validate files before processing\n      if (!(files !== null && files !== void 0 && files.length)) throw new Error('No files to process');\n      const formData = new FormData();\n      files.forEach(file => {\n        if (file) formData.append('files', file);\n      });\n\n      // Upload files\n      const uploadResponse = await fetch('http://localhost:5001/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!uploadResponse.ok) throw new Error('Upload failed');\n\n      // Process data\n      const processResponse = await fetch('http://localhost:5001/api/process', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          locationNumber: location\n        })\n      });\n      if (!processResponse.ok) throw new Error('Processing failed');\n\n      // Download result\n      const blob = await processResponse.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `equipment_report_${location || 'data'}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error.message);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Equipment Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onUploadComplete: handleUploadComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationInput, {\n      value: location,\n      onChange: setLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProcessButton, {\n      onClick: handleProcess,\n      disabled: !(files !== null && files !== void 0 && files.length) || !location || isProcessing,\n      loading: isProcessing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5E93AaK+OKW3GOJJYNjF1ivDIMg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","LocationInput","ProcessButton","jsxDEV","_jsxDEV","App","_s","files","setFiles","location","setLocation","isProcessing","setIsProcessing","handleUploadComplete","uploadedFiles","prev","Array","isArray","handleProcess","length","Error","formData","FormData","forEach","file","append","uploadResponse","fetch","method","body","ok","processResponse","headers","JSON","stringify","locationNumber","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","error","console","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadComplete","value","onChange","onClick","disabled","loading","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport LocationInput from './components/LocationInput';\nimport ProcessButton from './components/ProcessButton';\nimport './App.css';\n\nfunction App() {\n  const [files, setFiles] = useState([]); // Always initialize as array\n  const [location, setLocation] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Modified to handle both array and single file cases\n  const handleUploadComplete = (uploadedFiles) => {\n    setFiles(prev => [\n      ...prev,\n      ...(Array.isArray(uploadedFiles) ? uploadedFiles : [uploadedFiles])\n    ]);\n  };\n\n  const handleProcess = async () => {\n    setIsProcessing(true);\n    \n    try {\n      // Validate files before processing\n      if (!files?.length) throw new Error('No files to process');\n      \n      const formData = new FormData();\n      files.forEach(file => {\n        if (file) formData.append('files', file);\n      });\n\n      // Upload files\n      const uploadResponse = await fetch('http://localhost:5001/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!uploadResponse.ok) throw new Error('Upload failed');\n\n      // Process data\n      const processResponse = await fetch('http://localhost:5001/api/process', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ locationNumber: location })\n      });\n      if (!processResponse.ok) throw new Error('Processing failed');\n\n      // Download result\n      const blob = await processResponse.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `equipment_report_${location || 'data'}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error.message);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Equipment Processor</h1>\n      <FileUpload onUploadComplete={handleUploadComplete} />\n      <LocationInput value={location} onChange={setLocation} />\n      <ProcessButton \n        onClick={handleProcess} \n        disabled={!files?.length || !location || isProcessing}\n        loading={isProcessing}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}