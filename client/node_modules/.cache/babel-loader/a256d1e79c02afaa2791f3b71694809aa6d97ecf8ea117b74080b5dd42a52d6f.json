{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUploadComplete,\n  location: propLocation,\n  setLocation\n}) => {\n  _s();\n  const [photoFiles, setPhotoFiles] = useState([]);\n  const [manufacturerFile, setManufacturerFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState({\n    photos: 0,\n    manufacturer: 0\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const handlePhotoChange = e => {\n    setPhotoFiles(Array.from(e.target.files || []));\n  };\n  const handleManufacturerChange = e => {\n    var _e$target$files;\n    setManufacturerFile(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n  };\n  const handleLocationChange = e => {\n    setLocation(e.target.value);\n  };\n  const handleUpload = async () => {\n    if (!propLocation) {\n      alert('Please enter a location number');\n      return;\n    }\n    if (!photoFiles.length || !manufacturerFile) {\n      alert('Please upload both photos and manufacturer file');\n      return;\n    }\n    setIsUploading(true);\n    try {\n      // Upload photos\n      const photoFormData = new FormData();\n      photoFiles.forEach(file => {\n        photoFormData.append('photos', file);\n      });\n      await axios.post(`http://localhost:5001/api/upload/photos/${propLocation}`, photoFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progress => {\n          setUploadProgress(prev => ({\n            ...prev,\n            photos: Math.round(progress.loaded * 100 / progress.total)\n          }));\n        }\n      });\n\n      // Upload manufacturer file (note 'file' field name)\n      const manufacturerFormData = new FormData();\n      manufacturerFormData.append('file', manufacturerFile);\n      await axios.post(`http://localhost:5001/api/upload/manufacturer/${propLocation}`, manufacturerFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progress => {\n          setUploadProgress(prev => ({\n            ...prev,\n            manufacturer: Math.round(progress.loaded * 100 / progress.total)\n          }));\n        }\n      });\n\n      // Notify parent component\n      onUploadComplete([...photoFiles, manufacturerFile], propLocation);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      let errorMessage = error.message;\n      if (error.response) {\n        errorMessage = error.response.data.message || error.response.data.error || JSON.stringify(error.response.data);\n      }\n      alert(`Upload failed: ${errorMessage}`);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress({\n        photos: 0,\n        manufacturer: 0\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"5Y9nT2g9Iq9QK9vfiyFC9DTJn7I=\");\n_c = FileUpload;\nFileUpload.propTypes = {\n  onUploadComplete: PropTypes.func.isRequired,\n  location: PropTypes.string,\n  setLocation: PropTypes.func.isRequired\n};\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","PropTypes","jsxDEV","_jsxDEV","FileUpload","onUploadComplete","location","propLocation","setLocation","_s","photoFiles","setPhotoFiles","manufacturerFile","setManufacturerFile","uploadProgress","setUploadProgress","photos","manufacturer","isUploading","setIsUploading","handlePhotoChange","e","Array","from","target","files","handleManufacturerChange","_e$target$files","handleLocationChange","value","handleUpload","alert","length","photoFormData","FormData","forEach","file","append","post","headers","onUploadProgress","progress","prev","Math","round","loaded","total","manufacturerFormData","error","console","errorMessage","message","response","data","JSON","stringify","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","string","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/Seniors and Juniors/Program/client/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst FileUpload = ({ onUploadComplete, location: propLocation, setLocation }) => {\n  const [photoFiles, setPhotoFiles] = useState([]);\n  const [manufacturerFile, setManufacturerFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState({\n    photos: 0, \n    manufacturer: 0\n  });\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handlePhotoChange = (e) => {\n    setPhotoFiles(Array.from(e.target.files || []));\n  };\n\n  const handleManufacturerChange = (e) => {\n    setManufacturerFile(e.target.files?.[0] || null);\n  };\n\n  const handleLocationChange = (e) => {\n    setLocation(e.target.value);\n  };\n\n  const handleUpload = async () => {\n    if (!propLocation) {\n      alert('Please enter a location number');\n      return;\n    }\n\n    if (!photoFiles.length || !manufacturerFile) {\n      alert('Please upload both photos and manufacturer file');\n      return;\n    }\n\n    setIsUploading(true);\n\n    try {\n      // Upload photos\n      const photoFormData = new FormData();\n      photoFiles.forEach(file => {\n        photoFormData.append('photos', file);\n      });\n\n      await axios.post(\n        `http://localhost:5001/api/upload/photos/${propLocation}`,\n        photoFormData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progress => {\n            setUploadProgress(prev => ({\n              ...prev,\n              photos: Math.round((progress.loaded * 100) / progress.total)\n            }));\n          }\n        }\n      );\n\n      // Upload manufacturer file (note 'file' field name)\n      const manufacturerFormData = new FormData();\n      manufacturerFormData.append('file', manufacturerFile);\n\n      await axios.post(\n        `http://localhost:5001/api/upload/manufacturer/${propLocation}`,\n        manufacturerFormData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progress => {\n            setUploadProgress(prev => ({\n              ...prev,\n              manufacturer: Math.round((progress.loaded * 100) / progress.total)\n            }));\n          }\n        }\n      );\n\n      // Notify parent component\n      onUploadComplete([...photoFiles, manufacturerFile], propLocation);\n      \n    } catch (error) {\n      console.error('Upload failed:', error);\n      let errorMessage = error.message;\n      if (error.response) {\n        errorMessage = error.response.data.message || \n                      error.response.data.error || \n                      JSON.stringify(error.response.data);\n      }\n      alert(`Upload failed: ${errorMessage}`);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress({ photos: 0, manufacturer: 0 });\n    }\n  };\n\n  return (\n    <div className=\"file-upload-container\">\n      {/* ... rest of your JSX remains the same ... */}\n    </div>\n  );\n};\n\nFileUpload.propTypes = {\n  onUploadComplete: PropTypes.func.isRequired,\n  location: PropTypes.string,\n  setLocation: PropTypes.func.isRequired\n};\n\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}